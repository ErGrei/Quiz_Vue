{
  "beginner": [
    {
      "id": 1,
      "text": "Сколько типов данных в JavaScript?",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "8",
          "isCorrect": true
        },
        {
          "id": 2,
          "label": "B",
          "text": "7",
          "isCorrect": false
        },
        {
          "id": 3,
          "label": "C",
          "text": "5",
          "isCorrect": false
        },
        {
          "id": 4,
          "label": "D",
          "text": "12",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 2,
      "text": "Что такое переменная в JavaScript?",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "Элемент HTML",
          "isCorrect": false
        },
        {
          "id": 2,
          "label": "B",
          "text": "Блок кода",
          "isCorrect": false
        },
        {
          "id": 3,
          "label": "C",
          "text": "Место для хранения данных",
          "isCorrect": true
        },
        {
          "id": 4,
          "label": "D",
          "text": "Тип данных",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 3,
      "text": "Как создать переменную в JavaScript?",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "var name = 'John';",
          "isCorrect": true
        },
        {
          "id": 2,
          "label": "B",
          "text": "variable name = 'John';",
          "isCorrect": false
        },
        {
          "id": 3,
          "label": "C",
          "text": "name = 'John';",
          "isCorrect": false
        },
        {
          "id": 4,
          "label": "D",
          "text": "let name: 'John';",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 4,
      "text": "Что такое функция в JavaScript?",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "Специальный тип переменной",
          "isCorrect": false
        },
        {
          "id": 2,
          "label": "B",
          "text": "Блок кода, который можно вызвать",
          "isCorrect": true
        },
        {
          "id": 3,
          "label": "C",
          "text": "Элемент HTML",
          "isCorrect": false
        },
        {
          "id": 4,
          "label": "D",
          "text": "Тип данных",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 5,
      "text": "Какой результат выполнения кода console.log(2 + 2)?",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "22",
          "isCorrect": false
        },
        {
          "id": 2,
          "label": "B",
          "text": "4",
          "isCorrect": true
        },
        {
          "id": 3,
          "label": "C",
          "text": "NaN",
          "isCorrect": false
        },
        {
          "id": 4,
          "label": "D",
          "text": "undefined",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 6,
      "text": "Что такое массив в JavaScript?",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "Набор элементов HTML",
          "isCorrect": false
        },
        {
          "id": 2,
          "label": "B",
          "text": "Коллекция данных, хранящихся в одной переменной",
          "isCorrect": true
        },
        {
          "id": 3,
          "label": "C",
          "text": "Блок кода",
          "isCorrect": false
        },
        {
          "id": 4,
          "label": "D",
          "text": "Объект",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 7,
      "text": "Какой метод используется для добавления элемента в конец массива?",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "push()",
          "isCorrect": true
        },
        {
          "id": 2,
          "label": "B",
          "text": "pop()",
          "isCorrect": false
        },
        {
          "id": 3,
          "label": "C",
          "text": "shift()",
          "isCorrect": false
        },
        {
          "id": 4,
          "label": "D",
          "text": "unshift()",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 8,
      "text": "Что вернет выражение typeof 'Hello'?",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "string",
          "isCorrect": true
        },
        {
          "id": 2,
          "label": "B",
          "text": "object",
          "isCorrect": false
        },
        {
          "id": 3,
          "label": "C",
          "text": "number",
          "isCorrect": false
        },
        {
          "id": 4,
          "label": "D",
          "text": "undefined",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 9,
      "text": "Какое значение будет у переменной x после выполнения кода: var x; console.log(x);?",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "null",
          "isCorrect": false
        },
        {
          "id": 2,
          "label": "B",
          "text": "undefined",
          "isCorrect": true
        },
        {
          "id": 3,
          "label": "C",
          "text": "0",
          "isCorrect": false
        },
        {
          "id": 4,
          "label": "D",
          "text": "NaN",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 10,
      "text": "Что делает метод Array.prototype.pop()?",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "Добавляет элемент в конец массива",
          "isCorrect": false
        },
        {
          "id": 2,
          "label": "B",
          "text": "Удаляет последний элемент из массива",
          "isCorrect": true
        },
        {
          "id": 3,
          "label": "C",
          "text": "Добавляет элемент в начало массива",
          "isCorrect": false
        },
        {
          "id": 4,
          "label": "D",
          "text": "Удаляет первый элемент из массива",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 11,
      "text": "Что выведет на экран следующий код? console.log(typeof 42);",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "number",
          "isCorrect": true
        },
        {
          "id": 2,
          "label": "B",
          "text": "string",
          "isCorrect": false
        },
        {
          "id": 3,
          "label": "C",
          "text": "object",
          "isCorrect": false
        },
        {
          "id": 4,
          "label": "D",
          "text": "undefined",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 12,
      "text": "Как объявить функцию в JavaScript?",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "function myFunction() {}",
          "isCorrect": true
        },
        {
          "id": 2,
          "label": "B",
          "text": "var myFunction = {}",
          "isCorrect": false
        },
        {
          "id": 3,
          "label": "C",
          "text": "function = myFunction() {}",
          "isCorrect": false
        },
        {
          "id": 4,
          "label": "D",
          "text": "myFunction function() {}",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 13,
      "text": "Что делает оператор '===' в JavaScript?",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "Сравнивает значения с приведением типов",
          "isCorrect": false
        },
        {
          "id": 2,
          "label": "B",
          "text": "Сравнивает значения без приведения типов",
          "isCorrect": true
        },
        {
          "id": 3,
          "label": "C",
          "text": "Присваивает значение переменной",
          "isCorrect": false
        },
        {
          "id": 4,
          "label": "D",
          "text": "Сравнивает только типы данных",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 14,
      "text": "Какой результат выполнения кода: 1 == '1'?",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "true",
          "isCorrect": true
        },
        {
          "id": 2,
          "label": "B",
          "text": "false",
          "isCorrect": false
        },
        {
          "id": 3,
          "label": "C",
          "text": "undefined",
          "isCorrect": false
        },
        {
          "id": 4,
          "label": "D",
          "text": "null",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 15,
      "text": "Какое значение будет у переменной result? var result = '5' + 5;",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "10",
          "isCorrect": false
        },
        {
          "id": 2,
          "label": "B",
          "text": "'55'",
          "isCorrect": true
        },
        {
          "id": 3,
          "label": "C",
          "text": "'10'",
          "isCorrect": false
        },
        {
          "id": 4,
          "label": "D",
          "text": "NaN",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 16,
      "text": "Каков результат выполнения следующего кода? var x = 10; x += 5; console.log(x);",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "10",
          "isCorrect": false
        },
        {
          "id": 2,
          "label": "B",
          "text": "15",
          "isCorrect": true
        },
        {
          "id": 3,
          "label": "C",
          "text": "5",
          "isCorrect": false
        },
        {
          "id": 4,
          "label": "D",
          "text": "20",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 17,
      "text": "Какая команда используется для вывода данных в консоль?",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "alert()",
          "isCorrect": false
        },
        {
          "id": 2,
          "label": "B",
          "text": "console.log()",
          "isCorrect": true
        },
        {
          "id": 3,
          "label": "C",
          "text": "print()",
          "isCorrect": false
        },
        {
          "id": 4,
          "label": "D",
          "text": "document.write()",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 18,
      "text": "Что выведет следующий код? console.log(Boolean(0));",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "true",
          "isCorrect": false
        },
        {
          "id": 2,
          "label": "B",
          "text": "false",
          "isCorrect": true
        },
        {
          "id": 3,
          "label": "C",
          "text": "0",
          "isCorrect": false
        },
        {
          "id": 4,
          "label": "D",
          "text": "undefined",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 19,
      "text": "Какое ключевое слово используется для объявления переменной, значение которой не может быть изменено?",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "let",
          "isCorrect": false
        },
        {
          "id": 2,
          "label": "B",
          "text": "const",
          "isCorrect": true
        },
        {
          "id": 3,
          "label": "C",
          "text": "var",
          "isCorrect": false
        },
        {
          "id": 4,
          "label": "D",
          "text": "immutable",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 20,
      "text": "Что делает оператор 'typeof' в JavaScript?",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "Изменяет тип переменной",
          "isCorrect": false
        },
        {
          "id": 2,
          "label": "B",
          "text": "Определяет тип переменной",
          "isCorrect": true
        },
        {
          "id": 3,
          "label": "C",
          "text": "Удаляет переменную",
          "isCorrect": false
        },
        {
          "id": 4,
          "label": "D",
          "text": "Создает переменную",
          "isCorrect": false
        }
      ]
    }
  ],
  "intermediate": [
    {
      "id": 21,
      "text": "Что такое 'hoisting' в JavaScript?",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "Процесс удаления переменной",
          "isCorrect": false
        },
        {
          "id": 2,
          "label": "B",
          "text": "Механизм перемещения объявлений переменных и функций вверх по коду",
          "isCorrect": true
        },
        {
          "id": 3,
          "label": "C",
          "text": "Процесс преобразования типов",
          "isCorrect": false
        },
        {
          "id": 4,
          "label": "D",
          "text": "Асинхронное выполнение кода",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 22,
      "text": "Что такое замыкание (closure) в JavaScript?",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "Функция, которая вызывается немедленно после объявления",
          "isCorrect": false
        },
        {
          "id": 2,
          "label": "B",
          "text": "Функция, возвращающая другую функцию",
          "isCorrect": false
        },
        {
          "id": 3,
          "label": "C",
          "text": "Функция, которая имеет доступ к своей области видимости даже после завершения выполнения",
          "isCorrect": true
        },
        {
          "id": 4,
          "label": "D",
          "text": "Функция, выполняющаяся асинхронно",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 23,
      "text": "Какой результат выполнения следующего кода? console.log(0.1 + 0.2 == 0.3);",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "true",
          "isCorrect": false
        },
        {
          "id": 2,
          "label": "B",
          "text": "false",
          "isCorrect": true
        },
        {
          "id": 3,
          "label": "C",
          "text": "undefined",
          "isCorrect": false
        },
        {
          "id": 4,
          "label": "D",
          "text": "NaN",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 24,
      "text": "Какой метод используется для фильтрации элементов массива?",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "filter()",
          "isCorrect": true
        },
        {
          "id": 2,
          "label": "B",
          "text": "map()",
          "isCorrect": false
        },
        {
          "id": 3,
          "label": "C",
          "text": "reduce()",
          "isCorrect": false
        },
        {
          "id": 4,
          "label": "D",
          "text": "forEach()",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 25,
      "text": "Как создать объект в JavaScript?",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "var obj = {};",
          "isCorrect": true
        },
        {
          "id": 2,
          "label": "B",
          "text": "var obj = [];",
          "isCorrect": false
        },
        {
          "id": 3,
          "label": "C",
          "text": "var obj = new Object[];",
          "isCorrect": false
        },
        {
          "id": 4,
          "label": "D",
          "text": "var obj = Object();",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 26,
      "text": "Какой оператор используется для проверки наличия свойства в объекте?",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "exists",
          "isCorrect": false
        },
        {
          "id": 2,
          "label": "B",
          "text": "in",
          "isCorrect": true
        },
        {
          "id": 3,
          "label": "C",
          "text": "has",
          "isCorrect": false
        },
        {
          "id": 4,
          "label": "D",
          "text": "of",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 27,
      "text": "Что такое прототип в JavaScript?",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "Конструктор объекта",
          "isCorrect": false
        },
        {
          "id": 2,
          "label": "B",
          "text": "Механизм наследования свойств и методов объектов",
          "isCorrect": true
        },
        {
          "id": 3,
          "label": "C",
          "text": "Шаблон для создания объектов",
          "isCorrect": false
        },
        {
          "id": 4,
          "label": "D",
          "text": "Функция-конструктор",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 28,
      "text": "Какой результат выполнения следующего кода? console.log(null == undefined);",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "true",
          "isCorrect": true
        },
        {
          "id": 2,
          "label": "B",
          "text": "false",
          "isCorrect": false
        },
        {
          "id": 3,
          "label": "C",
          "text": "undefined",
          "isCorrect": false
        },
        {
          "id": 4,
          "label": "D",
          "text": "null",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 29,
      "text": "Что делает оператор 'instanceof' в JavaScript?",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "Проверяет, является ли переменная массивом",
          "isCorrect": false
        },
        {
          "id": 2,
          "label": "B",
          "text": "Проверяет, является ли переменная экземпляром класса",
          "isCorrect": true
        },
        {
          "id": 3,
          "label": "C",
          "text": "Создает новый экземпляр объекта",
          "isCorrect": false
        },
        {
          "id": 4,
          "label": "D",
          "text": "Приводит типы данных",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 30,
      "text": "Как преобразовать строку в число в JavaScript?",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "parseInt()",
          "isCorrect": true
        },
        {
          "id": 2,
          "label": "B",
          "text": "toNumber()",
          "isCorrect": false
        },
        {
          "id": 3,
          "label": "C",
          "text": "parseNumber()",
          "isCorrect": false
        },
        {
          "id": 4,
          "label": "D",
          "text": "convert()",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 31,
      "text": "Что выведет следующий код? console.log(typeof NaN);",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "number",
          "isCorrect": true
        },
        {
          "id": 2,
          "label": "B",
          "text": "undefined",
          "isCorrect": false
        },
        {
          "id": 3,
          "label": "C",
          "text": "string",
          "isCorrect": false
        },
        {
          "id": 4,
          "label": "D",
          "text": "object",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 32,
      "text": "Что делает метод Array.prototype.reduce()?",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "Преобразует массив в другой массив",
          "isCorrect": false
        },
        {
          "id": 2,
          "label": "B",
          "text": "Возвращает сумму всех элементов массива",
          "isCorrect": false
        },
        {
          "id": 3,
          "label": "C",
          "text": "Применяет функцию к каждому элементу массива, сводя его к одному значению",
          "isCorrect": true
        },
        {
          "id": 4,
          "label": "D",
          "text": "Фильтрует элементы массива",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 33,
      "text": "Какой результат выполнения следующего кода? var x = 10; console.log(x++);",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "10",
          "isCorrect": true
        },
        {
          "id": 2,
          "label": "B",
          "text": "11",
          "isCorrect": false
        },
        {
          "id": 3,
          "label": "C",
          "text": "9",
          "isCorrect": false
        },
        {
          "id": 4,
          "label": "D",
          "text": "undefined",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 34,
      "text": "Как создать асинхронную функцию в JavaScript?",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "function async myFunction() {}",
          "isCorrect": false
        },
        {
          "id": 2,
          "label": "B",
          "text": "async function myFunction() {}",
          "isCorrect": true
        },
        {
          "id": 3,
          "label": "C",
          "text": "function myFunction() async {}",
          "isCorrect": false
        },
        {
          "id": 4,
          "label": "D",
          "text": "myFunction async function() {}",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 35,
      "text": "Что такое 'event loop' в JavaScript?",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "Механизм обработки событий и асинхронных задач",
          "isCorrect": true
        },
        {
          "id": 2,
          "label": "B",
          "text": "Цикл, который повторяет одно и то же действие несколько раз",
          "isCorrect": false
        },
        {
          "id": 3,
          "label": "C",
          "text": "Механизм преобразования типов данных",
          "isCorrect": false
        },
        {
          "id": 4,
          "label": "D",
          "text": "Алгоритм сортировки массива",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 36,
      "text": "Что такое 'callback' в JavaScript?",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "Функция, передаваемая другой функции в качестве аргумента и вызываемая позже",
          "isCorrect": true
        },
        {
          "id": 2,
          "label": "B",
          "text": "Функция, которая вызывается сразу после своего объявления",
          "isCorrect": false
        },
        {
          "id": 3,
          "label": "C",
          "text": "Функция, которая выполняется асинхронно",
          "isCorrect": false
        },
        {
          "id": 4,
          "label": "D",
          "text": "Функция, которая возвращает другую функцию",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 37,
      "text": "Что такое промис (Promise) в JavaScript?",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "Объект, представляющий собой успешное выполнение или ошибку асинхронной операции",
          "isCorrect": true
        },
        {
          "id": 2,
          "label": "B",
          "text": "Функция, которая выполняется немедленно после объявления",
          "isCorrect": false
        },
        {
          "id": 3,
          "label": "C",
          "text": "Событие, которое происходит в будущем",
          "isCorrect": false
        },
        {
          "id": 4,
          "label": "D",
          "text": "Массив, содержащий результаты нескольких функций",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 38,
      "text": "Какой результат выполнения следующего кода? console.log('5' - 2);",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "'3'",
          "isCorrect": false
        },
        {
          "id": 2,
          "label": "B",
          "text": "3",
          "isCorrect": true
        },
        {
          "id": 3,
          "label": "C",
          "text": "7",
          "isCorrect": false
        },
        {
          "id": 4,
          "label": "D",
          "text": "'52'",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 39,
      "text": "Какой метод используется для объединения двух массивов?",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "join()",
          "isCorrect": false
        },
        {
          "id": 2,
          "label": "B",
          "text": "concat()",
          "isCorrect": true
        },
        {
          "id": 3,
          "label": "C",
          "text": "push()",
          "isCorrect": false
        },
        {
          "id": 4,
          "label": "D",
          "text": "append()",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 40,
      "text": "Что делает метод Array.prototype.splice()?",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "Добавляет элементы в конец массива",
          "isCorrect": false
        },
        {
          "id": 2,
          "label": "B",
          "text": "Удаляет элементы из массива и/или добавляет новые элементы",
          "isCorrect": true
        },
        {
          "id": 3,
          "label": "C",
          "text": "Преобразует массив в строку",
          "isCorrect": false
        },
        {
          "id": 4,
          "label": "D",
          "text": "Создает новый массив из существующего",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 41,
      "text": "Что делает метод Array.prototype.map()?",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "Фильтрует элементы массива",
          "isCorrect": false
        },
        {
          "id": 2,
          "label": "B",
          "text": "Применяет функцию к каждому элементу массива, возвращая новый массив",
          "isCorrect": true
        },
        {
          "id": 3,
          "label": "C",
          "text": "Объединяет два массива",
          "isCorrect": false
        },
        {
          "id": 4,
          "label": "D",
          "text": "Удаляет элементы из массива",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 42,
      "text": "Что такое оператор 'rest' в JavaScript?",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "Оператор для объединения двух массивов",
          "isCorrect": false
        },
        {
          "id": 2,
          "label": "B",
          "text": "Оператор для создания новых переменных",
          "isCorrect": false
        },
        {
          "id": 3,
          "label": "C",
          "text": "Оператор для передачи неограниченного количества аргументов в функцию",
          "isCorrect": true
        },
        {
          "id": 4,
          "label": "D",
          "text": "Оператор для деструктуризации объекта",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 43,
      "text": "Что такое стрелочные функции (arrow functions) в JavaScript?",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "Функции, объявляемые с использованием синтаксиса 'function'",
          "isCorrect": false
        },
        {
          "id": 2,
          "label": "B",
          "text": "Функции, не имеющие доступа к 'this' и 'arguments'",
          "isCorrect": true
        },
        {
          "id": 3,
          "label": "C",
          "text": "Функции, которые вызываются немедленно после объявления",
          "isCorrect": false
        },
        {
          "id": 4,
          "label": "D",
          "text": "Функции, которые выполняются асинхронно",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 44,
      "text": "Что такое 'async/await' в JavaScript?",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "Синтаксис для работы с асинхронным кодом на основе промисов",
          "isCorrect": true
        },
        {
          "id": 2,
          "label": "B",
          "text": "Методы для работы с массивами",
          "isCorrect": false
        },
        {
          "id": 3,
          "label": "C",
          "text": "Синтаксис для создания замыканий",
          "isCorrect": false
        },
        {
          "id": 4,
          "label": "D",
          "text": "Методы для работы с DOM-элементами",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 45,
      "text": "Какой результат выполнения следующего кода? console.log([1, 2, 3] + [4, 5, 6]);",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "[1, 2, 3, 4, 5, 6]",
          "isCorrect": false
        },
        {
          "id": 2,
          "label": "B",
          "text": "'1,2,34,5,6'",
          "isCorrect": false
        },
        {
          "id": 3,
          "label": "C",
          "text": "'1,2,34,5,6'",
          "isCorrect": false
        },
        {
          "id": 4,
          "label": "D",
          "text": "'1,2,34,5,6'",
          "isCorrect": true
        }
      ]
    },
    {
      "id": 46,
      "text": "Какой результат выполнения следующего кода? console.log(!!'false');",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "false",
          "isCorrect": false
        },
        {
          "id": 2,
          "label": "B",
          "text": "true",
          "isCorrect": true
        },
        {
          "id": 3,
          "label": "C",
          "text": "undefined",
          "isCorrect": false
        },
        {
          "id": 4,
          "label": "D",
          "text": "NaN",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 47,
      "text": "Что делает метод Array.prototype.sort() в JavaScript?",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "Сортирует массив в порядке возрастания или убывания",
          "isCorrect": true
        },
        {
          "id": 2,
          "label": "B",
          "text": "Фильтрует элементы массива",
          "isCorrect": false
        },
        {
          "id": 3,
          "label": "C",
          "text": "Преобразует массив в строку",
          "isCorrect": false
        },
        {
          "id": 4,
          "label": "D",
          "text": "Создает новый массив из существующего",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 48,
      "text": "Что делает метод Array.prototype.some()?",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "Возвращает новый массив, содержащий элементы, удовлетворяющие условию",
          "isCorrect": false
        },
        {
          "id": 2,
          "label": "B",
          "text": "Проверяет, удовлетворяет ли хотя бы один элемент массива условию",
          "isCorrect": true
        },
        {
          "id": 3,
          "label": "C",
          "text": "Возвращает сумму всех элементов массива",
          "isCorrect": false
        },
        {
          "id": 4,
          "label": "D",
          "text": "Удаляет элементы из массива",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 49,
      "text": "Что делает метод Object.freeze()?",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "Предотвращает добавление новых свойств к объекту",
          "isCorrect": false
        },
        {
          "id": 2,
          "label": "B",
          "text": "Запрещает изменение существующих свойств объекта",
          "isCorrect": false
        },
        {
          "id": 3,
          "label": "C",
          "text": "Делает объект неизменяемым",
          "isCorrect": true
        },
        {
          "id": 4,
          "label": "D",
          "text": "Удаляет свойства объекта",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 50,
      "text": "Какой результат выполнения следующего кода? console.log([1, 2] == [1, 2]);",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "true",
          "isCorrect": false
        },
        {
          "id": 2,
          "label": "B",
          "text": "false",
          "isCorrect": true
        },
        {
          "id": 3,
          "label": "C",
          "text": "undefined",
          "isCorrect": false
        },
        {
          "id": 4,
          "label": "D",
          "text": "NaN",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 51,
      "text": "Какой результат выполнения следующего кода? console.log(0.1 + 0.2 === 0.3);",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "true",
          "isCorrect": false
        },
        {
          "id": 2,
          "label": "B",
          "text": "false",
          "isCorrect": true
        },
        {
          "id": 3,
          "label": "C",
          "text": "undefined",
          "isCorrect": false
        },
        {
          "id": 4,
          "label": "D",
          "text": "NaN",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 52,
      "text": "Как создать пустой массив в JavaScript?",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "var arr = {};",
          "isCorrect": false
        },
        {
          "id": 2,
          "label": "B",
          "text": "var arr = [];",
          "isCorrect": true
        },
        {
          "id": 3,
          "label": "C",
          "text": "var arr = new Array();",
          "isCorrect": true
        },
        {
          "id": 4,
          "label": "D",
          "text": "var arr = emptyArray();",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 53,
      "text": "Что делает метод Array.prototype.find()?",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "Возвращает индекс первого элемента, удовлетворяющего условию",
          "isCorrect": false
        },
        {
          "id": 2,
          "label": "B",
          "text": "Возвращает первый элемент, удовлетворяющий условию",
          "isCorrect": true
        },
        {
          "id": 3,
          "label": "C",
          "text": "Возвращает массив всех элементов, удовлетворяющих условию",
          "isCorrect": false
        },
        {
          "id": 4,
          "label": "D",
          "text": "Удаляет элемент из массива",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 54,
      "text": "Какой результат выполнения следующего кода? console.log(1 + '2');",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "'12'",
          "isCorrect": true
        },
        {
          "id": 2,
          "label": "B",
          "text": "3",
          "isCorrect": false
        },
        {
          "id": 3,
          "label": "C",
          "text": "NaN",
          "isCorrect": false
        },
        {
          "id": 4,
          "label": "D",
          "text": "undefined",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 55,
      "text": "Что делает метод Array.prototype.filter()?",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "Удаляет элементы из массива",
          "isCorrect": false
        },
        {
          "id": 2,
          "label": "B",
          "text": "Применяет функцию к каждому элементу массива, возвращая новый массив",
          "isCorrect": false
        },
        {
          "id": 3,
          "label": "C",
          "text": "Создает новый массив, содержащий элементы, удовлетворяющие условию",
          "isCorrect": true
        },
        {
          "id": 4,
          "label": "D",
          "text": "Применяет функцию к каждому элементу массива, возвращая одно значение",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 56,
      "text": "Что делает метод Array.prototype.reduceRight()?",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "Преобразует массив в другой массив",
          "isCorrect": false
        },
        {
          "id": 2,
          "label": "B",
          "text": "Возвращает сумму всех элементов массива",
          "isCorrect": false
        },
        {
          "id": 3,
          "label": "C",
          "text": "Применяет функцию к каждому элементу массива, сводя его к одному значению, начиная с конца",
          "isCorrect": true
        },
        {
          "id": 4,
          "label": "D",
          "text": "Фильтрует элементы массива",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 57,
      "text": "Что такое ECMAScript?",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "Библиотека JavaScript",
          "isCorrect": false
        },
        {
          "id": 2,
          "label": "B",
          "text": "Набор стандартов для языка JavaScript",
          "isCorrect": true
        },
        {
          "id": 3,
          "label": "C",
          "text": "Среда выполнения JavaScript",
          "isCorrect": false
        },
        {
          "id": 4,
          "label": "D",
          "text": "Компилятор JavaScript",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 58,
      "text": "Что такое NaN в JavaScript?",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "Представляет результат деления на ноль",
          "isCorrect": false
        },
        {
          "id": 2,
          "label": "B",
          "text": "Число, которое не является числом",
          "isCorrect": true
        },
        {
          "id": 3,
          "label": "C",
          "text": "Значение переменной по умолчанию",
          "isCorrect": false
        },
        {
          "id": 4,
          "label": "D",
          "text": "Результат логической операции",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 59,
      "text": "Что делает метод Array.prototype.includes()?",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "Проверяет, содержит ли массив указанный элемент",
          "isCorrect": true
        },
        {
          "id": 2,
          "label": "B",
          "text": "Удаляет элементы из массива",
          "isCorrect": false
        },
        {
          "id": 3,
          "label": "C",
          "text": "Преобразует массив в строку",
          "isCorrect": false
        },
        {
          "id": 4,
          "label": "D",
          "text": "Добавляет элемент в конец массива",
          "isCorrect": false
        }
      ]
    },
    {
      "id": 60,
      "text": "Какой результат выполнения следующего кода? console.log(typeof NaN);",
      "options": [
        {
          "id": 1,
          "label": "A",
          "text": "'number'",
          "isCorrect": true
        },
        {
          "id": 2,
          "label": "B",
          "text": "'undefined'",
          "isCorrect": false
        },
        {
          "id": 3,
          "label": "C",
          "text": "'NaN'",
          "isCorrect": false
        },
        {
          "id": 4,
          "label": "D",
          "text": "'object'",
          "isCorrect": false
        }
      ]
    }
  ]
}

